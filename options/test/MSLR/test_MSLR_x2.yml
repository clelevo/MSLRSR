#   python basicsr/test.py -opt C:\BYC\MSLR\options\test\MSLR\test_MSLR_x2.yml

name: MSID_MixConv_Dilated_Channel_Shuffle_B64x2_wofft_Infraead
model_type: SRModel
scale: 2
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  test_1:  # the 1st test dataset
    name: Set5
    type: PairedImageDataset
    dataroot_gt: C:/BYC/SAFMN-main/datasets/Benchmarks/Set5/HR
    dataroot_lq: C:/BYC/SAFMN-main/datasets/Benchmarks/Set5/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  test_2:  # the 2nd test dataset
    name: Set14
    type: PairedImageDataset
    dataroot_gt: C:/BYC/SAFMN-main/datasets/Benchmarks/Set14/HR
    dataroot_lq: C:/BYC/SAFMN-main/datasets/Benchmarks/Set14/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  test_3:  # the 1st test dataset
    name: B100
    type: PairedImageDataset
    dataroot_gt: C:/BYC/SAFMN-main/datasets/Benchmarks/B100/HR
    dataroot_lq: C:/BYC/SAFMN-main/datasets/Benchmarks/B100/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  test_4:  # the 2nd test dataset
    name: Urban100
    type: PairedImageDataset
    dataroot_gt: C:/BYC/SAFMN-main/datasets/Benchmarks/Urban100/HR
    dataroot_lq: C:/BYC/SAFMN-main/datasets/Benchmarks/Urban100/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

  test_5:  # the 1st test dataset
    name: Manga109
    type: PairedImageDataset
    dataroot_gt: C:/BYC/SAFMN-main/datasets/Benchmarks/Manga109/HR
    dataroot_lq: C:/BYC/SAFMN-main/datasets/Benchmarks/Manga109/LR_bicubic/X2
    filename_tmpl: '{}_LRBI_x2'
    io_backend:
      type: disk

  test_6:
    name: Infread_Images
    type: PairedImageDataset
    dataroot_gt: C:/BYC/SAFMN-main/datasets/Select_Data/HR
    dataroot_lq: C:/BYC/SAFMN-main/datasets/Select_Data/NEW_LR_2
    filename_tmpl: '{}'
    io_backend:
      type: disk

# network structures
network_g:
  type: MSLR
#  dim: 36
#  n_blocks: 8
#  ffn_scale: 2.0
  upscale: 2

# path
path:
  pretrain_network_g: C:/BYC/SAFMN-main/experiments/pretrained_models/MSLR.pth
  strict_load_g: true

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true
